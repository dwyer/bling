Allow types where exprs are expected, for instance:
    - make(T)
    - var y T = T{...}
    - var x []T = []T{...}
    - etc.

Implement a way to define a value with no address, such as #define and C's enum.

Allow extending structs:

    typedef vec2 struct {
        x int;
        y int;
    };

    typedef vec3 struct {
        vec3;
        z int;
    }

Allow switch-case to take multiple expressions:

    // in bling
    switch (x) {
    case A, B, C:
        doSomething();
        break;
    default:
        break;
    }

    // in C
    switch (x) {
    case A:
    case B:
    case C:
        doSomething();
        break;
    default:
        break;
    }

    Later:
        Eventually we want to have switch cases to have an implicit break and to
        open a new scope by default. So the above example would be converted to:

        // in bling
        switch (x) {
        case A, B, C:
            var y = x + 1;
            doSomething(y);
        default:
            doSomethingElse();
        }

        // in C
        switch (x) {
        case A:
        case B:
        case C: {
                int y = x + 1;
                doSomething(y);
            }
            break;
        default: {
                doSomethingElse();
            }
            break;
        }

Allow key/value pairs as array elements.
    in C:       char *strings[256] = {[0] = "hello", [42] = "world"};
    in bling:   var strings [256]*char = {0: "hello", 42: "world"};

Use dollar-sign ('$') to select members of a package. For instance:

    var x pkg$Type = a
    var y = pkg$function(x)

    Dollar is used because cc interprets it has an ident, making it useful for
    name mangling, while blingc will interpret it as a selector op (such as '.'
    and '->').

    Roadmap:
        - Make '$' a token.
        - Prepend pkg$ to names of all package decls (excluding builtins and C
                primatives).

    Eventually it will be emitted as '.' in bling and '$' in C.

    Name mangling
        Mangle names when emitting C. Depends on the dollar-sign selector above.

    Declare pkg members into named scopes, to be selected (initially) by '$'
    selector.

        Consolidate different selector ops ('.', '->', '$') into just one ('.').
        Enforce this convention when parsing bling code.

Compile to assembly.
