* allow packages to contain more than one file
* Implicit nil: var decls without assignment are nil by default
* cmd/blingc: Add `run` option.
* array: Replace `[array]` with `[]`.
* string: Replace C strings with Bling strings
    * convert `charstr` and `charptr` to `string` and `[]i8` or similar.
* Slice: allow native arrays (and nil) to be assigned to Slice
* Slice: Change name to Array or similar
* Make `void` a keyword?
* switch: allow init expr
* Change cast syntax from `typ T(x)` to `T(x)`
* Make `sizeof` a builtin func.
* Remove '#' token from bling.
* var, let, and const
    * var: typical variable
    * let: "const" variable, must be assigned exactly once, has memory address
    * const: must be assigned once, has no memory address (like `enum` value or
      #define)
* Implement `import ( ... )` decl.
* Make semicolons optional before `}` and `)'.
* ast: Replace CastExpr with CallExpr.
* Eventually we want to have switch cases to have an implicit break and to open
  a new scope by default. So the above example would be converted to:

    // in bling
    switch (x) {
    case A, B, C:
        var y = x + 1;
        doSomething(y);
    default:
        doSomethingElse();
    }

    // in C
    switch (x) {
    case A:
    case B:
    case C: {
            int y = x + 1;
            doSomething(y);
        }
        break;
    default: {
            doSomethingElse();
        }
        break;
    }

    * When this is complete, change the functionality of `fallthrough`.
