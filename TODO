* Make `void` a keyword?
* if and switch: allow init expr
* Change cast syntax from `<T>x` to `typ(T) x`;
* Make `sizeof` a builtin func.
* Remove '#' token from bling.
* Implement a const type (like `enum` value or #define directive).
* Implement `import ( ... )` decl.
* Make semicolons optional before `}` and `)'.
* After we replace C code with Bling:
    * ast: Replace CastExpr with CallExpr.
    * Eventually we want to have switch cases to have an implicit break and to open
      a new scope by default. So the above example would be converted to:

        // in bling
        switch (x) {
        case A, B, C:
            var y = x + 1;
            doSomething(y);
        default:
            doSomethingElse();
        }

        // in C
        switch (x) {
        case A:
        case B:
        case C: {
                int y = x + 1;
                doSomething(y);
            }
            break;
        default: {
                doSomethingElse();
            }
            break;
        }

        * When this is complete, change the functionality of `fallthrough`.
