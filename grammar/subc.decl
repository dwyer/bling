type_qualifier : CONST | VOLATILE ;

type_specifier
        : VOID
        | CHAR
        | SHORT
        | INT
        | LONG
        | FLOAT
        | DOUBLE
        | SIGNED
	| UNSIGNED
        | struct_or_union_specifier
        | enum_specifier
        | TYPE_NAME
        ;

    struct_or_union_specifier
            : (STRUCT | UNION) IDENTIFIER? '{' struct_declaration+ '}'
            | (STRUCT | UNION) IDENTIFIER
            ;

        struct_declaration
                : specifier_qualifier_list struct_declarator_list ';'
                ;

            struct_declarator_list
                    : struct_declarator (',' struct_declarator)*
                    ;

                struct_declarator
                        : declarator
                        | ':' constant_expression
                        | declarator ':' constant_expression
                        ;

    enum_specifier
            : ENUM IDENTIFIER? '{' enumerator_list '}'
            | ENUM IDENTIFIER
            ;

        enumerator_list : enumerator | enumerator_list ',' enumerator ;

            enumerator
                    : IDENTIFIER ('=' constant_expression)?
                    ;

specifier_qualifier_list : type_qualifier? type_specifier ;

declaration_specifiers : storage_class_specifier? type_qualifier? type_specifier ;

    storage_class_specifier : TYPEDEF | EXTERN | STATIC | AUTO | REGISTER ;


pointer : '*' type_qualifier? pointer?  ;

parameter_type_list
	: parameter_list
	| parameter_list ',' ELLIPSIS
	;

    parameter_list
            : parameter_declaration
            | parameter_list ',' parameter_declaration
            ;

        parameter_declaration
                : declaration_specifiers (declarator | abstract_declarator)?
                ;

type_name : specifier_qualifier_list abstract_declarator? ;

declarator
        : pointer? direct_declarator
        ;

    direct_declarator
            : IDENTIFIER
            | '(' declarator ')'
            | direct_declarator '[' constant_expression? ']'
            | direct_declarator '(' parameter_type_list? ')'
            ;

abstract_declarator
	: pointer direct_abstract_declarator?
	| pointer? direct_abstract_declarator
	;

    direct_abstract_declarator
            : '(' abstract_declarator ')'
            | direct_abstract_declarator? '[' constant_expression? ']'
            | direct_abstract_declarator? '(' parameter_type_list? ')'
            ;

declaration
	| declaration_specifiers init_declarator_list? ';'
	;

    init_declarator_list
            : init_declarator
            | init_declarator_list ',' init_declarator
            ;

        init_declarator
                : declarator ('=' initializer)? ;

            initializer
                    : assignment_expression
                    | '{' initializer_list '}'
                    | '{' initializer_list ',' '}'
                    ;

                initializer_list
                        : initializer
                        | initializer_list ',' initializer
                        ;

translation_unit
	: external_declaration+
	;

    external_declaration : declaration | function_definition ;

        function_definition
                : declaration_specifiers declarator compound_statement
                ;
