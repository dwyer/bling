package runtime

import "C"

typ Error struct {
    error string
}

fun NewError(msg string) *Error {
    let err Error = {
        error: C.strdup(msg),
    }
    return &&err
}

fun Error_move(src *Error, dst **Error) {
    if dst != nil {
        *dst = src
    } else {
        panic(C.sprintf("Unhandled error: %s", src.error))
    }
}

fun Error_check(e **Error) {
    if C.getErrno() {
        let err *Error = NewError(C.strerror(C.getErrno()))
        Error_move(err, e)
    }
}

fun Error_free(e *Error) {
    free(e.error)
    free(e)
}
