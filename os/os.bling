package os

import "paths"
import "utils"

#pragma once

#include "bootstrap/bootstrap.h"

#include "utils/utils.h"

typedef Time uint64_t

typedef FileMode uint32_t

typedef File struct {
    fd uintptr_t
    name *char
    is_dir bool
}

var stdin *File

var stdout *File

var stderr *File

fun tempDir() *const char

fun newFile(fd uintptr_t, name *const char) *File

fun openFile(filename *const char, mode int, perm int, error **utils.Error) *File

fun close(file *File, error **utils.Error)

fun open(filename *const char, error **utils.Error) *File

fun create(filename *const char, error **utils.Error) *File

fun read(file *File, b *char, n int, error **utils.Error) int

fun write(file *File, b *const char, error **utils.Error) int

typedef FileInfo struct {
    _name *char
    _sys *void
}

fun FileInfo_name(info *FileInfo) *char

fun FileInfo_size(info *FileInfo) uint64_t

fun FileInfo_mode(info *FileInfo) FileMode

fun FileInfo_mod_time(info *FileInfo) Time

fun FileInfo_is_dir(info *FileInfo) bool

fun FileInfo_sys(info *FileInfo) *void

fun FileInfo_free(info *FileInfo)

fun stat(filename *const char, error **utils.Error) FileInfo

fun openDir(filename *const char, error **utils.Error) *File

fun readdir(file *File, error **utils.Error) **FileInfo

fun mkdirAll(path *const char, mode uint32_t, error **utils.Error)
